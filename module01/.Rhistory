summarise(Name=n(),total_emp=sum(Employees), mean_emp = mean(Employees), median_emp = median(Employees)) %>%
arrange(Name)
State_3rd_Highest
State_3rd_Highest <- inc %>%
filter(State == 'NY') %>%
group_by(Industry) %>%
summarise(Name=n(),total_emp=sum(Employees), mean_emp = mean(Employees), median_emp = median(Employees)) %>%
filter(Name > 8)
State_3rd_Highest
ggplot(State_3rd_Highest, aes(y = mean_emp, x = reorder(Industry, -mean_emp))) +
geom_bar(stat="identity", fill="#40b8d0") +
theme(axis.text.x = element_text(angle = 75, hjust = 1)) +
coord_flip()
ggplot(State_3rd_Highest, aes(y = median_emp, x = reorder(Industry, -median_emp))) +
geom_bar(stat="identity", fill="#b2d183") +
theme(axis.text.x = element_text(angle = 75, hjust = 1))
ggplot(State_3rd_Highest, aes(y = mean_emp, x = reorder(Industry, mean_emp))) +
geom_bar(stat="identity", fill="#40b8d0") +
theme(axis.text.x = element_text(angle = 75, hjust = 1)) +
coord_flip()
State_3rd_Highest <- inc %>%
filter(State == 'NY') %>%
group_by(Industry) %>%
summarise(Name=n(),total_emp=sum(Employees), mean_emp = mean(Employees), median_emp = median(Employees)) %>%
filter(Name > 5)
State_3rd_Highest
State_3rd_Highest <- inc %>%
filter(State == 'NY') %>%
group_by(Industry) %>%
summarise(Name=n(),total_emp=sum(Employees), mean_emp = mean(Employees), median_emp = median(Employees)) %>%
filter(Name > 5) %>%
arrange(desc(Name))
State_3rd_Highest
State_3rd_Highest
ggplot(State_3rd_Highest, aes(y = mean_emp, x = reorder(Industry, mean_emp))) +
geom_bar(stat="identity", fill="#40b8d0") +
theme(axis.text.x = element_text(angle = 75, hjust = 1)) +
coord_flip()
ggplot(State_3rd_Highest, aes(y = median_emp, x = reorder(Industry, -median_emp))) +
geom_bar(stat="identity", fill="#b2d183") +
theme(axis.text.x = element_text(angle = 75, hjust = 1)) +
coord_flip()
ggplot(State_3rd_Highest, aes(y = median_emp, x = reorder(Industry, median_emp))) +
geom_bar(stat="identity", fill="#b2d183") +
theme(axis.text.x = element_text(angle = 75, hjust = 1)) +
coord_flip()
ggplot(State_3rd_Highest, aes(y = mean_emp, x = reorder(Industry, mean_emp))) +
geom_bar(stat="identity", fill="#40b8d0") +
theme(axis.text.x = element_text(angle = 75, hjust = 1)) +
coord_flip() +
ggtitle("NY: Average Number of Employees per Industry") +
labs(y="", x="Industry") +
theme_classic() +
theme(plot.title = element_text(hjust = 0.5), panel.border = element_blank())
ggplot(State_3rd_Highest, aes(y = mean_emp, x = reorder(Industry, mean_emp))) +
geom_bar(stat="identity", fill="#40b8d0") +
theme(axis.text.x = element_text(angle = 75, hjust = 1)) +
coord_flip() +
ggtitle("NY: Average Number of Employees per Industry") +
theme_classic() +
theme(plot.title = element_text(hjust = 0.5), panel.border = element_blank())
ggplot(State_3rd_Highest, aes(y = mean_emp, x = reorder(Industry, mean_emp))) +
geom_bar(stat="identity", fill="#40b8d0") +
theme(axis.text.x = element_text(angle = 75, hjust = 1)) +
coord_flip() +
ggtitle("NY: Average Number of Employees per Industry") +
labs(y="", x="") +
theme_classic() +
theme(plot.title = element_text(hjust = 0.5), panel.border = element_blank())
State_3rd_Highest <- inc %>%
filter(State == 'NY') %>%
group_by(Industry) %>%
summarise(Name=n(),total_emp=sum(Employees), mean_emp = mean(Employees), median_emp = median(Employees)) %>%
filter(Name > 4) %>%
arrange(desc(Name))
State_3rd_Highest
ggplot(State_3rd_Highest, aes(y = mean_emp, x = reorder(Industry, mean_emp))) +
geom_bar(stat="identity", fill="#40b8d0") +
theme(axis.text.x = element_text(angle = 75, hjust = 1)) +
coord_flip() +
ggtitle("NY: Average Number of Employees per Industry") +
labs(y="", x="") +
theme_classic() +
theme(plot.title = element_text(hjust = 0.5), panel.border = element_blank())
ggplot(State_3rd_Highest, aes(y = mean_emp, x = reorder(Industry, mean_emp))) +
geom_bar(stat="identity", fill="#40b8d0") +
theme(axis.text.x = element_text(angle = 75, hjust = 1)) +
coord_flip() +
ggtitle("NY: Average Number of Employees per Industry") +
labs(y="(minimum of 5 companies", x="") +
theme_classic() +
theme(plot.title = element_text(hjust = 0.5), panel.border = element_blank())
ggplot(State_3rd_Highest, aes(y = mean_emp, x = reorder(Industry, mean_emp))) +
geom_bar(stat="identity", fill="#40b8d0") +
theme(axis.text.x = element_text(angle = 75, hjust = 1)) +
coord_flip() +
ggtitle("NY: Average Number of Employees per Industry") +
labs(y="(minimum of 5 companies)", x="") +
theme_classic() +
theme(plot.title = element_text(hjust = 0.5), panel.border = element_blank())
ggplot(State_3rd_Highest, aes(y = mean_emp, x = reorder(Industry, mean_emp))) +
geom_bar(stat="identity", fill="#40b8d0") +
theme(axis.text.x = element_text(angle = 75, hjust = 1)) +
coord_flip() +
ggtitle("NY: Average Number of Employees per Industry") +
labs(y="(minimum of 5 companies per industry)", x="") +
theme_classic() +
theme(plot.title = element_text(hjust = 0.5), panel.border = element_blank())
#Plot saved as a separte pdf file
png(filename="DATA608_Assignment_One_Question_Two(1).png", width=400, height=600)
ggplot(State_3rd_Highest, aes(y = mean_emp, x = reorder(Industry, mean_emp))) +
geom_bar(stat="identity", fill="#40b8d0") +
theme(axis.text.x = element_text(angle = 75, hjust = 1)) +
coord_flip() +
ggtitle("NY: Average Number of Employees per Industry") +
labs(y="(minimum of 5 companies per industry)", x="") +
theme_classic() +
theme(plot.title = element_text(hjust = 0.5), panel.border = element_blank())
#Plot saved as a separte pdf file
png(filename="DATA608_Assignment_One_Question_Two(1).png", width=600, height=900)
ggplot(State_3rd_Highest, aes(y = mean_emp, x = reorder(Industry, mean_emp))) +
geom_bar(stat="identity", fill="#40b8d0") +
theme(axis.text.x = element_text(angle = 75, hjust = 1)) +
coord_flip() +
ggtitle("NY: Average Number of Employees per Industry") +
labs(y="(minimum of 5 companies per industry)", x="") +
theme_classic() +
theme(plot.title = element_text(hjust = 0.5), panel.border = element_blank())
ggplot(State_3rd_Highest, aes(y = median_emp, x = reorder(Industry, median_emp))) +
geom_bar(stat="identity", fill="#b2d183") +
theme(axis.text.x = element_text(angle = 75, hjust = 1)) +
coord_flip() +
ggtitle("NY: Median Number of Employees per Industry") +
labs(y="(minimum of 5 companies per industry)", x="") +
theme_classic() +
theme(plot.title = element_text(hjust = 0.5), panel.border = element_blank())
#Plot saved as a separte pdf file
png(filename="DATA608_Assignment_One_Question_Two(2).png", width=600, height=900)
ggplot(State_3rd_Highest, aes(y = median_emp, x = reorder(Industry, median_emp))) +
geom_bar(stat="identity", fill="#b2d183") +
theme(axis.text.x = element_text(angle = 75, hjust = 1)) +
coord_flip() +
ggtitle("NY: Median Number of Employees per Industry") +
labs(y="(minimum of 5 companies per industry)", x="") +
theme_classic() +
theme(plot.title = element_text(hjust = 0.5), panel.border = element_blank())
ggplot(Industry_Rev_Employee, aes(y = Industry_Revenue_perEmployee, x = reorder(Industry, Industry_Revenue_perEmployee))) +
geom_bar(stat="identity", fill="#40b8d0") +
theme(axis.text.x = element_text(angle = 75, hjust = 1)) +
coord_flip() +
ggtitle("Industry Revenue per Employee") +
labs(y="(minimum of 5 companies per industry)", x="") +
theme_classic() +
theme(plot.title = element_text(hjust = 0.5), panel.border = element_blank())
Industry_Rev_Employee <- inc %>%
group_by(Industry) %>%
summarise(Total_Revenue=sum(Revenue), Total_Employee=sum(Employees), Industry_Revenue_perEmployee = sum(Revenue) / sum(Employees)) %>%
arrange(desc(Industry_Revenue_perEmployee))
Industry_Rev_Employee
ggplot(Industry_Rev_Employee, aes(y = Industry_Revenue_perEmployee, x = reorder(Industry, Industry_Revenue_perEmployee))) +
geom_bar(stat="identity", fill="#40b8d0") +
theme(axis.text.x = element_text(angle = 75, hjust = 1)) +
coord_flip() +
ggtitle("Industry Revenue per Employee") +
labs(y="(minimum of 5 companies per industry)", x="") +
theme_classic() +
theme(plot.title = element_text(hjust = 0.5), panel.border = element_blank())
ggplot(Industry_Rev_Employee, aes(y = Industry_Revenue_perEmployee, x = reorder(Industry, Industry_Revenue_perEmployee))) +
geom_bar(stat="identity", fill="#40b8d0") +
theme(axis.text.x = element_text(angle = 75, hjust = 1)) +
coord_flip() +
ggtitle("Industry Revenue per Employee") +
labs(y="", x="") +
theme_classic() +
theme(plot.title = element_text(hjust = 0.5), panel.border = element_blank())
labs <- c("$0", "$300K", "$600K", "$900K")
ggplot(Industry_Rev_Employee, aes(y = Industry_Revenue_perEmployee, x = reorder(Industry, Industry_Revenue_perEmployee))) +
geom_bar(stat="identity", fill="#40b8d0") +
theme(axis.text.x = element_text(angle = 75, hjust = 1)) +
scale_y_continuous(labels = labs) +
coord_flip() +
ggtitle("Industry Revenue per Employee") +
labs(y="", x="") +
theme_classic() +
theme(plot.title = element_text(hjust = 0.5), panel.border = element_blank())
labs <- c("$0", "$300K", "$600K", "$900K", "$1M")
ggplot(Industry_Rev_Employee, aes(y = Industry_Revenue_perEmployee, x = reorder(Industry, Industry_Revenue_perEmployee))) +
geom_bar(stat="identity", fill="#40b8d0") +
theme(axis.text.x = element_text(angle = 75, hjust = 1)) +
scale_y_continuous(labels = labs) +
coord_flip() +
ggtitle("Industry Revenue per Employee") +
labs(y="", x="") +
theme_classic() +
theme(plot.title = element_text(hjust = 0.5), panel.border = element_blank())
labs <- c("$0", "$300K", "$600K", "$900K", "$1M")
#Plot saved as a separte pdf file
png(filename="DATA608_Assignment_One_Question_Three.png", width=600, height=900)
ggplot(Industry_Rev_Employee, aes(y = Industry_Revenue_perEmployee, x = reorder(Industry, Industry_Revenue_perEmployee))) +
geom_bar(stat="identity", fill="#40b8d0") +
theme(axis.text.x = element_text(angle = 75, hjust = 1)) +
scale_y_continuous(labels = labs) +
coord_flip() +
ggtitle("Industry Revenue per Employee") +
labs(y="", x="") +
theme_classic() +
theme(plot.title = element_text(hjust = 0.5), panel.border = element_blank())
identify_outlier <- function(datapoint) {
q1 = 25
q3 = 132
interquartile_range = q3-q1
if (datapoint < q1-(1.5*interquartile_range) | datapoint > q3+(1.5*interquartile_range)){
return("Outlier")
}
else{
return("Acceptable")
}
}
inc$Outlier <- sapply(inc$Employees, identify_outlier, simplify=T)
inc %>%
select(State,Name, Employees, Outlier) %>%
filter(Outlier != "Outlier") %>%
arrange(desc(Employees))
inc <- read.csv("https://raw.githubusercontent.com/charleyferrari/CUNY_DATA_608/master/module1/Data/inc5000_data.csv", header= TRUE)
head(inc)
summary(inc)
# Insert your code here, create more chunks as necessary
dim(inc)
str(inc)
inc[!complete.cases(inc),]
# Answer Question 1 here
suppressWarnings(suppressMessages(library("dplyr", quietly = T)))
library(dplyr)
Companies_per_State <- inc %>%
group_by(State) %>%
summarise(Companies_in_State = n()) %>%
arrange(Companies_in_State)
library(ggplot2)
#Plot saved as a separte pdf file
png(filename="DATA608_Assignment_One_Question_One.png", width=900, height=1200)
ggplot(Companies_per_State, aes(x=reorder(State, Companies_in_State), y=Companies_in_State)) +
geom_bar(stat = "identity", fill="blue") +
coord_flip() +
ggtitle("Distribution of Growth Companies by State") +
labs(y="No. of Growth COmpanies", x="State") +
theme_classic() +
theme(plot.title = element_text(hjust = 0.5), panel.border = element_blank())
# Answer Question 2 here
inc <- inc[complete.cases(inc),]
dim(inc)
ggplot(inc, aes(x = State, y = Employees)) +
geom_point() +
scale_x_discrete(name = "State") +
scale_y_continuous(name = "Employees") +
geom_jitter() +
theme(axis.text.x = element_text(angle = 75, hjust = 1))
max(inc$Employees)
min(inc$Employees)
identify_outlier <- function(datapoint) {
q1 = 25
q3 = 132
interquartile_range = q3-q1
if (datapoint < q1-(1.5*interquartile_range) | datapoint > q3+(1.5*interquartile_range)){
return("Outlier")
}
else{
return("Acceptable")
}
}
inc$Outlier <- sapply(inc$Employees, identify_outlier, simplify=T)
inc %>%
select(State,Name, Employees, Outlier) %>%
filter(Outlier != "Outlier") %>%
arrange(desc(Employees))
identify_outlier <- function(datapoint) {
q1 = 25
q3 = 132
interquartile_range = q3-q1
if (datapoint < q1-(1.5*interquartile_range) | datapoint > q3+(1.5*interquartile_range)){
return("Outlier")
}
else{
return("Acceptable")
}
}
inc$Outlier <- sapply(inc$Employees, identify_outlier, simplify=T)
head(inc[inc$Outlier=="Outlier",])
inc <- inc %>%
filter(Outlier != 'Outlier')
dim(inc)
inc <- read.csv("https://raw.githubusercontent.com/charleyferrari/CUNY_DATA_608/master/module1/Data/inc5000_data.csv", header= TRUE)
head(inc)
summary(inc)
# Insert your code here, create more chunks as necessary
dim(inc)
str(inc)
inc[!complete.cases(inc),]
# Answer Question 1 here
suppressWarnings(suppressMessages(library("dplyr", quietly = T)))
library(dplyr)
Companies_per_State <- inc %>%
group_by(State) %>%
summarise(Companies_in_State = n()) %>%
arrange(Companies_in_State)
library(ggplot2)
#Plot saved as a separte pdf file
#png(filename="DATA608_Assignment_One_Question_One.png", width=900, height=1200)
ggplot(Companies_per_State, aes(x=reorder(State, Companies_in_State), y=Companies_in_State)) +
geom_bar(stat = "identity", fill="blue") +
coord_flip() +
ggtitle("Distribution of Growth Companies by State") +
labs(y="No. of Growth COmpanies", x="State") +
theme_classic() +
theme(plot.title = element_text(hjust = 0.5), panel.border = element_blank())
# Answer Question 2 here
inc <- inc[complete.cases(inc),]
dim(inc)
ggplot(inc, aes(x = State, y = Employees)) +
geom_point() +
scale_x_discrete(name = "State") +
scale_y_continuous(name = "Employees") +
geom_jitter() +
theme(axis.text.x = element_text(angle = 75, hjust = 1))
max(inc$Employees)
min(inc$Employees)
identify_outlier <- function(datapoint) {
q1 = 25
q3 = 132
interquartile_range = q3-q1
if (datapoint < q1-(1.5*interquartile_range) | datapoint > q3+(1.5*interquartile_range)){
return("Outlier")
}
else{
return("Acceptable")
}
}
inc$Outlier <- sapply(inc$Employees, identify_outlier, simplify=T)
head(inc[inc$Outlier=="Outlier",])
inc <- inc %>%
filter(Outlier != 'Outlier')
dim(inc)
ggplot(inc, aes(x = State, y = Employees)) +
geom_point() +
scale_x_discrete(name = "State") +
scale_y_continuous(name = "Employees") +
geom_jitter() +
theme(axis.text.x = element_text(angle = 75, hjust = 1))
Cos_in_State <- inc %>%
group_by(State) %>%
summarise(Companies_in_State = n()) %>%
arrange(desc(Companies_in_State))  %>%
top_n(3) %>%
slice(3L)
Cos_in_State
State_3rd_Highest <- inc %>%
filter(State == 'NY') %>%
group_by(Industry) %>%
summarise(Name=n(),total_emp=sum(Employees), mean_emp = mean(Employees), median_emp = median(Employees)) %>%
filter(Name > 4) %>%
arrange(desc(Name))
State_3rd_Highest
#Plot saved as a separte pdf file
#png(filename="DATA608_Assignment_One_Question_Two(1).png", width=600, height=900)
ggplot(State_3rd_Highest, aes(y = mean_emp, x = reorder(Industry, mean_emp))) +
geom_bar(stat="identity", fill="#40b8d0") +
theme(axis.text.x = element_text(angle = 75, hjust = 1)) +
coord_flip() +
ggtitle("NY: Average Number of Employees per Industry") +
labs(y="(minimum of 5 companies per industry)", x="") +
theme_classic() +
theme(plot.title = element_text(hjust = 0.5), panel.border = element_blank())
#Plot saved as a separte pdf file
png(filename="DATA608_Assignment_One_Question_Two(2).png", width=600, height=900)
ggplot(State_3rd_Highest, aes(y = median_emp, x = reorder(Industry, median_emp))) +
geom_bar(stat="identity", fill="#b2d183") +
theme(axis.text.x = element_text(angle = 75, hjust = 1)) +
coord_flip() +
ggtitle("NY: Median Number of Employees per Industry") +
labs(y="(minimum of 5 companies per industry)", x="") +
theme_classic() +
theme(plot.title = element_text(hjust = 0.5), panel.border = element_blank())
# Answer Question 3 here
inc$Rev_per_Employee <- inc$Revenue / inc$Employees
head(inc)
Industry_Rev_Employee <- inc %>%
group_by(Industry) %>%
summarise(Total_Revenue=sum(Revenue), Total_Employee=sum(Employees), Industry_Revenue_perEmployee = sum(Revenue) / sum(Employees)) %>%
arrange(desc(Industry_Revenue_perEmployee))
Industry_Rev_Employee
labs <- c("$0", "$300K", "$600K", "$900K", "$1M")
#Plot saved as a separte pdf file
#png(filename="DATA608_Assignment_One_Question_Three.png", width=600, height=900)
ggplot(Industry_Rev_Employee, aes(y = Industry_Revenue_perEmployee, x = reorder(Industry, Industry_Revenue_perEmployee))) +
geom_bar(stat="identity", fill="#40b8d0") +
theme(axis.text.x = element_text(angle = 75, hjust = 1)) +
scale_y_continuous(labels = labs) +
coord_flip() +
ggtitle("Industry Revenue per Employee") +
labs(y="", x="") +
theme_classic() +
theme(plot.title = element_text(hjust = 0.5), panel.border = element_blank())
inc <- read.csv("https://raw.githubusercontent.com/charleyferrari/CUNY_DATA_608/master/module1/Data/inc5000_data.csv", header= TRUE)
head(inc)
summary(inc)
# Insert your code here, create more chunks as necessary
dim(inc)
str(inc)
inc[!complete.cases(inc),]
# Answer Question 1 here
suppressWarnings(suppressMessages(library("dplyr", quietly = T)))
library(dplyr)
Companies_per_State <- inc %>%
group_by(State) %>%
summarise(Companies_in_State = n()) %>%
arrange(Companies_in_State)
library(ggplot2)
#Plot saved as a separte pdf file
png(filename="DATA608_Assignment_One_Question_One.png", width=900, height=1200)
ggplot(Companies_per_State, aes(x=reorder(State, Companies_in_State), y=Companies_in_State)) +
geom_bar(stat = "identity", fill="blue") +
coord_flip() +
ggtitle("Distribution of Growth Companies by State") +
labs(y="No. of Growth COmpanies", x="State") +
theme_classic() +
theme(plot.title = element_text(hjust = 0.5), panel.border = element_blank())
# Answer Question 2 here
inc <- inc[complete.cases(inc),]
dim(inc)
ggplot(inc, aes(x = State, y = Employees)) +
geom_point() +
scale_x_discrete(name = "State") +
scale_y_continuous(name = "Employees") +
geom_jitter() +
theme(axis.text.x = element_text(angle = 75, hjust = 1))
max(inc$Employees)
min(inc$Employees)
identify_outlier <- function(datapoint) {
q1 = 25
q3 = 132
interquartile_range = q3-q1
if (datapoint < q1-(1.5*interquartile_range) | datapoint > q3+(1.5*interquartile_range)){
return("Outlier")
}
else{
return("Acceptable")
}
}
inc$Outlier <- sapply(inc$Employees, identify_outlier, simplify=T)
head(inc[inc$Outlier=="Outlier",])
inc <- inc %>%
filter(Outlier != 'Outlier')
dim(inc)
ggplot(inc, aes(x = State, y = Employees)) +
geom_point() +
scale_x_discrete(name = "State") +
scale_y_continuous(name = "Employees") +
geom_jitter() +
theme(axis.text.x = element_text(angle = 75, hjust = 1))
Cos_in_State <- inc %>%
group_by(State) %>%
summarise(Companies_in_State = n()) %>%
arrange(desc(Companies_in_State))  %>%
top_n(3) %>%
slice(3L)
Cos_in_State
State_3rd_Highest <- inc %>%
filter(State == 'NY') %>%
group_by(Industry) %>%
summarise(Name=n(),total_emp=sum(Employees), mean_emp = mean(Employees), median_emp = median(Employees)) %>%
filter(Name > 4) %>%
arrange(desc(Name))
State_3rd_Highest
#Plot saved as a separte pdf file
png(filename="DATA608_Assignment_One_Question_Two(1).png", width=600, height=900)
ggplot(State_3rd_Highest, aes(y = mean_emp, x = reorder(Industry, mean_emp))) +
geom_bar(stat="identity", fill="#40b8d0") +
theme(axis.text.x = element_text(angle = 75, hjust = 1)) +
coord_flip() +
ggtitle("NY: Average Number of Employees per Industry") +
labs(y="(minimum of 5 companies per industry)", x="") +
theme_classic() +
theme(plot.title = element_text(hjust = 0.5), panel.border = element_blank())
#Plot saved as a separte pdf file
png(filename="DATA608_Assignment_One_Question_Two(2).png", width=600, height=900)
ggplot(State_3rd_Highest, aes(y = median_emp, x = reorder(Industry, median_emp))) +
geom_bar(stat="identity", fill="#b2d183") +
theme(axis.text.x = element_text(angle = 75, hjust = 1)) +
coord_flip() +
ggtitle("NY: Median Number of Employees per Industry") +
labs(y="(minimum of 5 companies per industry)", x="") +
theme_classic() +
theme(plot.title = element_text(hjust = 0.5), panel.border = element_blank())
# Answer Question 3 here
inc$Rev_per_Employee <- inc$Revenue / inc$Employees
head(inc)
Industry_Rev_Employee <- inc %>%
group_by(Industry) %>%
summarise(Total_Revenue=sum(Revenue), Total_Employee=sum(Employees), Industry_Revenue_perEmployee = sum(Revenue) / sum(Employees)) %>%
arrange(desc(Industry_Revenue_perEmployee))
Industry_Rev_Employee
labs <- c("$0", "$300K", "$600K", "$900K", "$1M")
#Plot saved as a separte pdf file
png(filename="DATA608_Assignment_One_Question_Three.png", width=600, height=900)
ggplot(Industry_Rev_Employee, aes(y = Industry_Revenue_perEmployee, x = reorder(Industry, Industry_Revenue_perEmployee))) +
geom_bar(stat="identity", fill="#40b8d0") +
theme(axis.text.x = element_text(angle = 75, hjust = 1)) +
scale_y_continuous(labels = labs) +
coord_flip() +
ggtitle("Industry Revenue per Employee") +
labs(y="", x="") +
theme_classic() +
theme(plot.title = element_text(hjust = 0.5), panel.border = element_blank())
